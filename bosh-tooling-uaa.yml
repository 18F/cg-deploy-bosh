templates:
  client: &client-template
    authorities: uaa.none
    authorized-grant-types: authorization_code,client_credentials,refresh_token
    autoapprove: true
    override: true
    access-token-validity: 3600
    refresh-token-validity: 3600

instance_groups:
- name: bosh
  jobs:
  - name: uaa
    properties:
      uaa:
        issuer: https://opslogin.fr.cloud.gov
        clients:
          concourse_production:
            <<: *client-template
            scope: openid,concourse.admin,concourse.apps
            authorities: uaa.none,concourse.admin,concourse.apps
            secret: (( param "specify concourse production secret" ))
            redirect-uri: (( param "specify concourse production redirect url" ))
          concourse_staging:
            <<: *client-template
            scope: openid,concourse.admin,concourse.apps
            authorities: uaa.none,concourse.admin,concourse.apps
            secret: (( param "specify concourse staging secret" ))
            redirect-uri: (( param "specify concourse staging redirect url" ))
          monitoring_production:
            scope: openid,metrics.read
            secret: (( param "specify monitoring production secret" ))
            redirect-uri: (( param "specify monitoring production redirect url" ))
            <<: *client-template
          monitoring_staging:
            scope: openid,metrics.read
            secret: (( param "specify monitoring staging secret" ))
            redirect-uri: (( param "specify monitoring staging redirect url" ))
            <<: *client-template
          # For authentication to bosh via concourse
          concourse_bosh:
            secret: (( grab secrets.bosh_uaa_concourse_bosh_client_secret ))
            authorized-grant-types: client_credentials
            authorities: bosh.admin
            scope: ""
          uaa-token-audit:
            secret: (( param "specify uaa token audit client secret" ))
            authorized-grant-types: client_credentials
            authorities: scim.read,tokens.list,uaa.admin
            scope: ""
          platform-kibana-development:
            <<: *client-template
            scope: openid,email,profile
            redirect-uri: https://logs-platform.dev.us-gov-west-1.aws-us-gov.cloud.gov/oauth2/callback
            secret: (( param "specify platform logs development client secret" ))
          platform-kibana-staging:
            <<: *client-template
            scope: openid,email,profile
            redirect-uri: https://logs-platform.fr-stage.cloud.gov/oauth2/callback
            secret: (( param "specify platform logs staging client secret" ))
          platform-kibana-production:
            <<: *client-template
            scope: openid,email,profile
            redirect-uri: https://logs-platform.fr.cloud.gov/oauth2/callback
            secret: (( param "specify platform logs production client secret" ))

          prometheus-staging:
            <<: *client-template
            scope: openid,email,profile
            redirect-uri: https://prometheus.fr-stage.cloud.gov/oauth2/callback,https://alertmanager.fr-stage.cloud.gov/oauth2/callback,https://grafana.fr-stage.cloud.gov/oauth2/callback
            secret: (( param "specify prometheus staging client secret" ))
          prometheus-production:
            <<: *client-template
            scope: openid,email,profile
            redirect-uri: https://prometheus.fr.cloud.gov/oauth2/callback,https://alertmanager.fr.cloud.gov/oauth2/callback,https://grafana.fr.cloud.gov/oauth2/callback
            secret: (( param "specify prometheus production client secret" ))
