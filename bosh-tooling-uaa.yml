templates:
  client: &client-template
    authorities: uaa.none
    authorized-grant-types: authorization_code,client_credentials,refresh_token
    autoapprove: true
    override: true
    access-token-validity: 3600
    refresh-token-validity: 3600

instance_groups:
- name: bosh
  jobs:
  - name: uaa
    properties:
      uaa:
        clients:
          concourse_production:
            <<: *client-template
            scope: openid,concourse.admin,concourse.apps
            authorities: uaa.none,concourse.admin,concourse.apps
            secret: (( param "specify concourse production secret" ))
            redirect-uri: (( param "specify concourse production redirect url" ))
          concourse_staging:
            <<: *client-template
            scope: openid,concourse.admin,concourse.apps
            authorities: uaa.none,concourse.admin,concourse.apps
            secret: (( param "specify concourse staging secret" ))
            redirect-uri: (( param "specify concourse staging redirect url" ))
          monitoring_production:
            scope: openid,metrics.read
            secret: (( param "specify monitoring production secret" ))
            redirect-uri: (( param "specify monitoring production redirect url" ))
            <<: *client-template
          monitoring_staging:
            scope: openid,metrics.read
            secret: (( param "specify monitoring staging secret" ))
            redirect-uri: (( param "specify monitoring staging redirect url" ))
            <<: *client-template
          prometheus_grafana_production:
            scope: openid,metrics.read
            secret: (( param "specify prometheus production secret" ))
            redirect-uri: (( param "specify prometheus production redirect url" ))
            <<: *client-template
          prometheus_grafana_staging:
            scope: openid,metrics.read
            secret: (( param "specify prometheus staging secret" ))
            redirect-uri: (( param "specify prometheus staging redirect url" ))
            <<: *client-template
          # For authentication to bosh via concourse
          concourse_bosh:
            secret: (( param "specify concourse bosh client secret" ))
            authorized-grant-types: client_credentials
            authorities: bosh.admin
            scope: ""
          uaa-token-audit:
            secret: (( param "specify uaa token audit client secret" ))
            authorized-grant-types: client_credentials
            authorities: scim.read,tokens.list,uaa.admin
            scope: ""
