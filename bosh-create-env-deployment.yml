---
meta:
  name: bosh
  networks:
    private:
      static_ips: [10.0.0.6]
  default_static_ip: (( grab meta.networks.private.static_ips.[0] ))
  keypair_file: ./decrypt/master-bosh.pem
  cloud_properties:
    availability_zone: ~
  passwords:
    nats-password: ~
    postgres-password: ~
    admin-password: ~
    director-password: ~
    agent-password: ~
    hm-password: ~
    mbus-password: ~
  aws:
    default_key_name: bosh
    default_security_groups: ~
    region: ~
  upstream_dns_ip: ~
  bosh_domain_name: ~

name: (( grab meta.name ))

releases:
- name: bosh
  url: (( grab $RELEASES_BOSH_URL ))
  sha1: (( grab $RELEASES_BOSH_SHA1 ))
- name: bosh-aws-cpi
  url: (( grab $RELEASES_BOSH_AWS_CPI_URL ))
  sha1: (( grab $RELEASES_BOSH_AWS_CPI_SHA1 ))

resource_pools:
- name: vms
  network: private
  stemcell:
    url: (( grab $STEMCELL_URL ))
    sha1: (( grab $STEMCELL_SHA1 ))
  cloud_properties:
    instance_type: m3.large
    iam_instance_profile: (( grab terraform_outputs.master_bosh_profile ))
    ephemeral_disk:
      size: 25_000
      type: gp2
      encrypted: true
    availability_zone: (( grab meta.cloud_properties.availability_zone ))

disk_pools:
- name: bosh-ssd
  disk_size: 20_000
  cloud_properties:
    type: gp2
    encrypted: true

networks: (( param "specify networks" ))

jobs:
- name: bosh
  instances: 1

  templates:
  - {name: nats, release: bosh}
  - {name: powerdns, release: bosh}
  - {name: postgres, release: bosh}
  - {name: blobstore, release: bosh}
  - {name: director, release: bosh}
  - {name: health_monitor, release: bosh}
  - {name: registry, release: bosh}
  - {name: aws_cpi, release: bosh-aws-cpi}

  resource_pool: vms
  persistent_disk_pool: bosh-ssd

  networks:
  - name: private
    static_ips: (( grab meta.networks.private.static_ips ))
    default: [dns, gateway]

  properties:
    nats:
      address: 127.0.0.1
      user: nats
      password: (( grab meta.passwords.nats-password ))

    postgres: &bosh_db
      listen_address: 127.0.0.1
      host: 127.0.0.1
      user: postgres
      password: (( grab meta.passwords.postgres-password ))
      database: bosh
      adapter: postgres

    dns:
      address: (( grab meta.default_static_ip ))
      db: *bosh_db
      recursor: (( grab meta.upstream_dns_ip ))
      domain_name: (( grab meta.bosh_domain_name ))

    registry:
      address: (( grab meta.default_static_ip ))
      host: (( grab meta.default_static_ip ))
      db: *bosh_db
      http:
        user: admin
        password: (( grab meta.passwords.admin-password ))
        port: 25777
      username: admin
      password: (( grab meta.passwords.admin-password ))
      port: 25777
      cloud:
        plugin: aws
        credentials_source: env_or_profile
        region: (( grab meta.aws.region ))

    blobstore:
      address: (( grab meta.default_static_ip ))
      port: 25250
      provider: dav
      director:
        user: director
        password: (( grab meta.passwords.director-password ))
      agent:
        user: agent
        password: (( grab meta.passwords.agent-password ))

    director:
      address: 127.0.0.1
      name: (( grab meta.name ))
      db: *bosh_db
      cpi_job: aws_cpi
      max_threads: 10
      user_management:
        provider: local
        local:
          users:
          - name: admin
            password: (( grab meta.passwords.admin-password ))
          - name: hm
            password: (( grab meta.passwords.hm-password ))

    hm:
      director_account:
        user: hm
        password: (( grab meta.passwords.hm-password ))
      resurrector_enabled: true

    aws: &aws
      default_key_name: (( grab meta.aws.default_key_name ))
      default_security_groups: (( grab meta.aws.default_security_groups ))
      credentials_source: env_or_profile
      region: (( grab meta.aws.region ))

    agent:
      mbus: (( concat "nats://nats:" meta.passwords.nats-password "@" meta.default_static_ip ":4222" ))

    ntp: &ntp [time.nist.gov]

cloud_provider:
  template: {name: aws_cpi, release: bosh-aws-cpi}

  ssh_tunnel:
    host: (( grab meta.default_static_ip ))
    port: 22
    user: vcap
    private_key: (( grab meta.keypair_file ))

  mbus: (( concat "https://mbus:" meta.passwords.mbus-password "@" meta.default_static_ip ":6868" ))

  properties:
    aws: *aws
    agent:
      mbus: (( concat "https://mbus:" meta.passwords.mbus-password "@0.0.0.0:6868" ))
    blobstore: {provider: local, path: /var/vcap/micro_bosh/data/cache}
    ntp: *ntp
